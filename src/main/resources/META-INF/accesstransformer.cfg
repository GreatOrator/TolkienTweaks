# TreeRootsDecorator (allows FeaturePlacers methods to get the root state and position)
public net.minecraft.world.level.levelgen.feature.treedecorators.TreeDecorator$Context decorationSetter

# For JEI registration
public net.minecraft.world.item.crafting.RecipeManager byType(Lnet/minecraft/world/item/crafting/RecipeType;)Ljava/util/Collection;

# Chameleon Stuff
public net.minecraft.world.item.StandingAndWallBlockItem wallBlock
public net.minecraft.world.level.block.state.StateHolder PROPERTY_ENTRY_TO_STRING_FUNCTION

# Menu Stuff
public net.minecraft.world.inventory.InventoryMenu TEXTURE_EMPTY_SLOTS
public-f net.minecraft.client.gui.components.AbstractWidget render(Lnet/minecraft/client/gui/GuiGraphics;IIF)V # render

# (adds blocks for stripping and burning repsectively)
public-f net.minecraft.world.item.AxeItem STRIPPABLES

# Minecraft Specific Stuff
public net.minecraft.world.entity.Entity level # level
public-f net.minecraft.world.level.block.TorchBlock flameParticle
public net.minecraft.world.level.storage.loot.parameters.LootContextParamSets REGISTRY # REGISTRY

# Codecs (for creation of a MapColor codec)
public net.minecraft.world.level.material.MapColor <init>(II)V # <init>

# BiomeMaker
public net.minecraft.core.Holder$Reference bindKey(Lnet/minecraft/resources/ResourceKey;)V

# CavesCarver
public net.minecraft.world.level.levelgen.carver.CaveCarverConfiguration floorLevel
public net.minecraft.world.level.levelgen.carver.WorldCarver isDebugEnabled(Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;)Z
public net.minecraft.world.level.levelgen.carver.WorldCarver getCarveState(Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/Aquifer;)Lnet/minecraft/world/level/block/state/BlockState;

public net.minecraft.client.renderer.LevelRenderer skyRenderer
